---
import { getCollection, render } from "astro:content";
import Container from "@components/Container.astro";
import PageLayout from "@layouts/PageLayout.astro";
import ArrowCard from "@components/ArrowCard.astro";
import Link from "@components/Link.astro";
import { dateRange } from "@lib/utils";
import { SITE, HOME } from "@consts";
import LetsConnect from "@components/LetsConnect.astro";

const blog = (await getCollection("blog"))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0,SITE.NUM_POSTS_ON_HOMEPAGE);

const projects = (await getCollection("projects"))
  .filter(project => !project.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0,SITE.NUM_PROJECTS_ON_HOMEPAGE);

const allwork = (await getCollection("work"))
  .sort((a, b) => new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf())
  .slice(0,SITE.NUM_WORKS_ON_HOMEPAGE);

const work = await Promise.all(
  allwork.map(async (item) => {
    const { Content } = await render(item);
    return { ...item, Content };
  })
);

---

<PageLayout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <h1 class="animate font-semibold text-black dark:text-white text-xl">
      Hey there, I'm Danilo <span class="text-xl">üëãüèª</span> 
    </h1>
    <div class="space-y-16">
      <section>
        <article class="space-y-4">
          <p class="animate">
            I'm a Staff Software Engineer and Platform Engineer with a passion for building fast, reliable, and
            user-friendly web applications. From optimizing frontend performance to architecting scalable cloud platforms,
            I've had the opportunity to work on some of the most challenging and rewarding projects in the industry. On this
            blog, I'll share my experiences, insights, and lessons learned, covering topics like:
          </p>
          <p class="animate">
            <ul class="animate">
              <li>
                <b>Frontend performance optimization:</b> Techniques for building blazing-fast web experiences that delight users.
                I'll dive into code splitting, image optimization, caching strategies, and more to help you squeeze every ounce
                of performance from your frontend applications.
              </li>
              <li>
                <b>Cloud-native platform engineering:</b> Architecting scalable and resilient systems in the cloud using technologies
                like Kubernetes, Docker, and serverless functions. I'll share best practices for designing, deploying, and managing
                cloud infrastructure for optimal performance and cost-efficiency.
              </li>
              <li>
                <b>DevOps and CI/CD:</b> Building and deploying software with speed and efficiency. I'll explore topics like continuous
                integration, continuous delivery, automated testing, and infrastructure as code to help you streamline your development
                workflows and accelerate your release cycles.
              </li>
              <li>
                <b>Leadership and team dynamics:</b> Creating high-performing engineering teams that thrive on collaboration and
                innovation. I'll share insights on mentoring, delegation, communication, and fostering a culture of continuous
                learning and improvement.
              </li>
            </ul>
          </p>
          <p class="animate">
            Whether you're a junior developer looking to level up your skills or a seasoned engineer seeking new
            perspectives, I hope you'll find valuable insights and practical advice on this blog.
          </p>
        </article>
      </section>

      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Latest posts
          </h5>
          <Link href="/blog">
            See all posts
          </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {blog.map(post => (
            <li>
              <ArrowCard entry={post} />
            </li>
          ))}
        </ul>
      </section>

      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Work Experience
          </h5>
          <Link href="/work">
            See all work
          </Link>
        </div>
        <ul class="flex flex-col space-y-4">
          {work.map(entry => (
            <li>
              <div class="text-sm opacity-75">
                {dateRange(entry.data.dateStart, entry.data.dateEnd)}
              </div>
              <div class="font-semibold text-black dark:text-white">
                {entry.data.company}
              </div>
              <div class="text-sm opacity-75">
                {entry.data.role}
              </div>
              <article>
                <entry.Content />
              </article>
            </li>
          ))}
        </ul>
      </section>

      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Recent projects
          </h5>
          <Link href="/projects">
            See all projects
          </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {projects.map(project => (
            <li>
              <ArrowCard entry={project} />
            </li>
          ))}
        </ul>
      </section>

      <LetsConnect />
    </div>
  </Container>
</PageLayout>
